{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\company proj\\\\party-menu-app-full\\\\src\\\\contexts\\\\SelectionContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectionContext = /*#__PURE__*/createContext();\nexport const SelectionProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedIds, setSelectedIds] = useState(new Set());\n  const toggleSelect = id => {\n    setSelectedIds(prev => {\n      const copy = new Set(prev);\n      if (copy.has(id)) copy.delete(id);else copy.add(id);\n      return copy;\n    });\n  };\n  const isSelected = id => selectedIds.has(id);\n  const clearAll = () => setSelectedIds(new Set());\n  const value = useMemo(() => ({\n    selectedIds,\n    toggleSelect,\n    isSelected,\n    clearAll,\n    totalSelected: selectedIds.size\n  }), [selectedIds]);\n  return /*#__PURE__*/_jsxDEV(SelectionContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectionProvider, \"hhb3Dkb4+Xcsyr5d0wXiMkxVTl0=\");\n_c = SelectionProvider;\nvar _c;\n$RefreshReg$(_c, \"SelectionProvider\");","map":{"version":3,"names":["React","createContext","useState","useMemo","jsxDEV","_jsxDEV","SelectionContext","SelectionProvider","children","_s","selectedIds","setSelectedIds","Set","toggleSelect","id","prev","copy","has","delete","add","isSelected","clearAll","value","totalSelected","size","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/company proj/party-menu-app-full/src/contexts/SelectionContext.js"],"sourcesContent":["\nimport React, { createContext, useState, useMemo } from \"react\";\n\nexport const SelectionContext = createContext();\n\nexport const SelectionProvider = ({ children }) => {\n  const [selectedIds, setSelectedIds] = useState(new Set());\n\n  const toggleSelect = (id) => {\n    setSelectedIds(prev => {\n      const copy = new Set(prev);\n      if (copy.has(id)) copy.delete(id);\n      else copy.add(id);\n      return copy;\n    });\n  };\n\n  const isSelected = (id) => selectedIds.has(id);\n  const clearAll = () => setSelectedIds(new Set());\n\n  const value = useMemo(() => ({\n    selectedIds,\n    toggleSelect,\n    isSelected,\n    clearAll,\n    totalSelected: selectedIds.size\n  }), [selectedIds]);\n\n  return (\n    <SelectionContext.Provider value={value}>\n      {children}\n    </SelectionContext.Provider>\n  );\n};\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,gBAAgB,gBAAGL,aAAa,CAAC,CAAC;AAE/C,OAAO,MAAMM,iBAAiB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAIU,GAAG,CAAC,CAAC,CAAC;EAEzD,MAAMC,YAAY,GAAIC,EAAE,IAAK;IAC3BH,cAAc,CAACI,IAAI,IAAI;MACrB,MAAMC,IAAI,GAAG,IAAIJ,GAAG,CAACG,IAAI,CAAC;MAC1B,IAAIC,IAAI,CAACC,GAAG,CAACH,EAAE,CAAC,EAAEE,IAAI,CAACE,MAAM,CAACJ,EAAE,CAAC,CAAC,KAC7BE,IAAI,CAACG,GAAG,CAACL,EAAE,CAAC;MACjB,OAAOE,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,UAAU,GAAIN,EAAE,IAAKJ,WAAW,CAACO,GAAG,CAACH,EAAE,CAAC;EAC9C,MAAMO,QAAQ,GAAGA,CAAA,KAAMV,cAAc,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;EAEhD,MAAMU,KAAK,GAAGnB,OAAO,CAAC,OAAO;IAC3BO,WAAW;IACXG,YAAY;IACZO,UAAU;IACVC,QAAQ;IACRE,aAAa,EAAEb,WAAW,CAACc;EAC7B,CAAC,CAAC,EAAE,CAACd,WAAW,CAAC,CAAC;EAElB,oBACEL,OAAA,CAACC,gBAAgB,CAACmB,QAAQ;IAACH,KAAK,EAAEA,KAAM;IAAAd,QAAA,EACrCA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACpB,EAAA,CA5BWF,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}